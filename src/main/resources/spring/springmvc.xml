<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 可以扫描controller、service、...
	这里让扫描controller，指定controller的包
	 -->
	<context:component-scan base-package="web"></context:component-scan>
	
	<!-- 静态资源解析，如果采用RESTFUL风格的url，不对静态资源解析，将会导致该静态资源失效
	包括 ：js、css、img、..
	<mvc:resources location="/js/" mapping="/js/**"/>
	还以下的解决方法：它的意思就是没有映射到的URL交给默认的web容器中的servlet进行处理：-->

	<mvc:default-servlet-handler />

	<!-- 使用 mvc:annotation-driven代替注解映射器和注解适配器配置
	mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven
	 -->
	<!-- conversion-service自定义参数绑定配置，validator校验器配置 -->
	<mvc:annotation-driven
		conversion-service="conversionService">
		<!-- 设置UTF-8编码配置，避免中文乱码-->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg>
					<bean class="java.nio.charset.Charset" factory-method="forName">
						<constructor-arg value="UTF-8"/>
					</bean>
				</constructor-arg>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	

	<!-- 视图解析器
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
				<!-- 日期类型转换 -->
			<bean class="web.converter.DateConverter"/>
		</property>

	</bean>

	<!-- 全局异常处理器
	只要实现HandlerExceptionResolver接口就是全局异常处理器
	 -->
	<bean class="exception.CustomExceptionResolver"></bean>

	<!-- 文件上传 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为1000MB -->
		<property name="maxUploadSize">
			<value>1048576000</value>
		</property>
	</bean>

	<!--拦截器 -->
	<mvc:interceptors>
		<!--多个拦截器,顺序执行 -->
		<!-- 登陆认证拦截器 -->
		<!-- /**表示所有url包括子url路径 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<!-- 登陆认证拦截器 -->
			<bean class="interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<!-- 导航栏数据填充拦截器 -->
			<bean class="interceptor.TypeInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>